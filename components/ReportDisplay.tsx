
import React from 'react';
import { Report, AgentFinding, AgentFailure } from '../types';
import XCircleIcon from './icons/XCircleIcon';

interface ReportDisplayProps {
  report: Report;
}

const ConfidenceBar: React.FC<{ level: number }> = ({ level }) => {
  const percentage = Math.round(level * 100);
  let barColor = 'bg-brand-success';
  if (percentage < 75) barColor = 'bg-brand-warning';
  if (percentage < 50) barColor = 'bg-brand-danger';

  return (
    <div className="w-full bg-brand-border rounded-full h-2.5">
      <div
        className={`${barColor} h-2.5 rounded-full`}
        style={{ width: `${percentage}%` }}
      ></div>
    </div>
  );
};

const AgentFindingCard: React.FC<{ finding: AgentFinding }> = ({ finding }) => (
    <div className="bg-brand-surface p-6 rounded-lg border border-brand-border transform transition-transform duration-300 hover:scale-[1.02] hover:border-brand-primary">
        <h4 className="text-xl font-bold text-brand-primary">{finding.agentName}</h4>
        <p className="text-sm text-brand-text-secondary mb-3">{finding.specialization}</p>
        <p className="mb-4 text-brand-text-primary">{finding.summary}</p>
        <ul className="space-y-2 list-disc list-inside">
            {finding.details.map((detail, i) => (
                <li key={i} className="text-brand-text-secondary">{detail}</li>
            ))}
        </ul>
    </div>
);

const AgentFailureCard: React.FC<{ failure: AgentFailure }> = ({ failure }) => (
    <div className="bg-brand-surface p-6 rounded-lg border border-brand-danger transform transition-transform duration-300 hover:scale-[1.02]">
        <div className="flex items-center justify-between">
            <h4 className="text-xl font-bold text-brand-danger">{failure.agentName}</h4>
            <XCircleIcon className="w-6 h-6 text-brand-danger" />
        </div>
        <p className="text-sm text-brand-text-secondary mt-2 mb-3 italic">Task: {failure.task}</p>
        <div className="p-3 bg-red-900/40 rounded">
             <p className="text-sm font-semibold text-red-300 mb-1">Error Details:</p>
             <p className="text-sm text-red-300 font-mono">{failure.error}</p>
        </div>
    </div>
);


const ReportDisplay: React.FC<ReportDisplayProps> = ({ report }) => {
  return (
    <div className="w-full mx-auto p-8 md:p-12 space-y-8 animate-fade-in-slow">
        <style>{`
            @keyframes fade-in-slow {
              from { opacity: 0; transform: translateY(20px); }
              to { opacity: 1; transform: translateY(0); }
            }
            .animate-fade-in-slow {
                animation: fade-in-slow 0.8s ease-out forwards;
            }
        `}</style>
        
        {/* Header */}
        <div className="text-center">
            <h2 className="text-3xl font-bold text-white">Financial Intelligence Report</h2>
            <p className="text-brand-text-secondary mt-1">Generated by FINTEL Multi-Agent System</p>
        </div>

        {/* Executive Summary */}
        <section>
            <h3 className="text-2xl font-semibold mb-4 text-white border-b-2 border-brand-border pb-2">Executive Summary</h3>
            <p className="text-brand-text-primary text-lg leading-relaxed">{report.executiveSummary}</p>
        </section>

        {/* Agent Findings */}
        <section>
            <h3 className="text-2xl font-semibold mb-4 text-white border-b-2 border-brand-border pb-2">Agent-Specific Findings</h3>
            <div className="grid md:grid-cols-2 gap-6">
                {report.agentFindings.map((finding, i) => (
                    <AgentFindingCard key={i} finding={finding} />
                ))}
            </div>
        </section>

        {/* Execution Failures */}
        {report.failedAgents && report.failedAgents.length > 0 && (
            <section>
                <h3 className="text-2xl font-semibold mb-4 text-white border-b-2 border-brand-danger/50 pb-2">Execution Failures</h3>
                <div className="grid md:grid-cols-2 gap-6">
                    {report.failedAgents.map((failure, i) => (
                        <AgentFailureCard key={i} failure={failure} />
                    ))}
                </div>
            </section>
        )}

        {/* Cross-Agent Insights */}
        <section>
            <h3 className="text-2xl font-semibold mb-4 text-white border-b-2 border-brand-border pb-2">Cross-Agent Insights</h3>
            <div className="bg-brand-surface p-6 rounded-lg border border-brand-border">
                <p className="text-brand-text-primary leading-relaxed">{report.crossAgentInsights}</p>
            </div>
        </section>

        {/* Recommendations & Risks */}
        <div className="grid md:grid-cols-2 gap-8">
            <section>
                <h3 className="text-2xl font-semibold mb-4 text-white border-b-2 border-brand-border pb-2">Actionable Recommendations</h3>
                <ul className="space-y-3">
                    {report.actionableRecommendations.map((rec, i) => (
                        <li key={i} className="flex items-start">
                            <span className="text-brand-primary font-bold mr-3 mt-1">âœ“</span>
                            <span className="text-brand-text-primary">{rec}</span>
                        </li>
                    ))}
                </ul>
            </section>
            <section>
                <h3 className="text-2xl font-semibold mb-4 text-white border-b-2 border-brand-border pb-2">Risk Assessment</h3>
                <div className="bg-brand-surface p-4 rounded-lg border border-brand-border">
                    <p className="text-brand-text-primary">{report.riskAssessment}</p>
                </div>
            </section>
        </div>

        {/* Confidence & Data Quality */}
        <section>
            <h3 className="text-2xl font-semibold mb-4 text-white border-b-2 border-brand-border pb-2">Report Confidence & Data Quality</h3>
            <div className="bg-brand-surface p-6 rounded-lg border border-brand-border grid md:grid-cols-2 gap-6 items-center">
                <div>
                    <h4 className="font-bold text-brand-text-primary mb-2">Confidence Level: {Math.round(report.confidenceLevel * 100)}%</h4>
                    <ConfidenceBar level={report.confidenceLevel} />
                </div>
                <div>
                    <h4 className="font-bold text-brand-text-primary mb-2">Data Quality Notes</h4>
                    <p className="text-sm text-brand-text-secondary">{report.dataQualityNotes}</p>
                </div>
            </div>
        </section>

    </div>
  );
};

export default ReportDisplay;